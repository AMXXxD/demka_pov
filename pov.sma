/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <reapi_reunion>

#define PLUGIN "POV"
#define VERSION "1.0"
#define AUTHOR "PANDA"

new dane[33][3], maxplayers;

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_clcmd("say /pov", "pov");
	maxplayers=get_maxplayers();
}

public client_putinserver(id){
	if(!is_user_hltv(id) && !is_user_bot(id)){
		if(is_user_steam(id)) dane[id][0]=1;
		else query_client_cvar(id, "cl_filterstuffcmd", "check_sidchanger2");
		dane[id][1]=0;
		dane[id][2]=0;
	}
}

public check_sidchanger2(id, const cvar[], const value[]){
	if(equal(value, "CVAR is privileged")) dane[id][0]=2;
	else dane[id][0]=0;
}

public client_disconnected(id){
	if(dane[id][1]){
		if(is_user_connected(dane[id][2]) && get_user_flags(dane[id][2]) & ADMIN_LEVEL_H){
			new nick[33];
			get_user_name(id, nick, 32);
			log_to_file("addons/amxmodx/logs/pov.log", "Gracz %s opuscil serwer, czas demka: %s", nick, GetTimeAsString(get_systime(0)-dane[id][1]));
			client_print(dane[id][2], print_chat, "Gracz %s opuscil serwer, czas demka: %s", nick, GetTimeAsString(get_systime(0)-dane[id][1]));
		}
		client_cmd(id, "stop record");
		dane[id][1]=0;
		dane[id][2]=0;
	}
	dane[id][0]=0;
}
		
public pov(id){
	if(get_user_flags(id) & ADMIN_LEVEL_H){
		new menu=menu_create("Lista Graczy:", "menu_handler");
		new callback=menu_makecallback("menu_callback");
		new name[33], data[6], steam[16], dlugosc[30];
		for(new i=1; i<=maxplayers; i++){
			if(!is_user_connected(i)) continue;
			num_to_str(i, data, 5);
			get_user_name(i, name, 32);
			formatex(steam, 15, "\d%s", dane[i][0]==2 ? "Sid Changer" : dane[i][0]==1 ? "Steam" : "NonSteam");
			formatex(dlugosc, 29, "\wczas demka: \y%s", GetTimeAsString(get_systime(0)-dane[i][1]));
			menu_additem(menu, fmt("%s %s %s", name, steam, dane[i][1] ? dlugosc : ""), data, _, callback);
		}
		menu_setprop(menu, MPROP_BACKNAME, "Poprzednia");
		menu_setprop(menu, MPROP_NEXTNAME, "Nastepna");
		menu_setprop(menu, MPROP_EXITNAME, "Wyjscie");
		menu_display(id, menu);
	}
	return PLUGIN_HANDLED;
}

public menu_callback(id, menu, item){
	new name[33], callback, data[6], dostep;
	menu_item_getinfo(menu, item, dostep, data, 5, name, 31, callback);
	if(!dane[str_to_num(data)][0]) return ITEM_DISABLED;
	return ITEM_ENABLED;
}

public menu_handler(id, menu, item){
	if(item==MENU_EXIT || !is_user_connected(id)) return;
	
	new name[33], callback, data[6], dostep;
	menu_item_getinfo(menu, item, dostep, data, 5, name, 31, callback);
	new id2=str_to_num(data);
	
	if(!is_user_connected(id2)){
		client_print(id, print_chat, "Gracza nie ma na serwerze");
		return;
	}	
	
	if(dane[id2][1]){
		client_cmd(id2, "stop record");
		log_to_file("addons/amxmodx/logs/pov.log", "Zakonczono nagrywanie dla gracza %n dlugosc demka: %s", id2, GetTimeAsString(get_systime(0)-dane[id2][1]));
		client_print(id, print_chat, "Zakonczono nagrywanie dla gracza %n dlugosc demka: %s", id2, GetTimeAsString(get_systime(0)-dane[id2][1]));
		dane[id2][1]=0;
		dane[id2][2]=0;
		return;
	}
	client_cmd(id2, "stop record");
	new nazwa[100], mapka[32], nick[33];
	get_user_name(id2, nick, 32);
	replace_all(nick, 32, " ", "_");
	replace_all(nick, 32, "<", "_");
	replace_all(nick, 32, ">", "_");
	replace_all(nick, 32, ":", "_");
	get_mapname(mapka, 31);
	formatex(nazwa, 99, "PrivateMix_%s_%s", nick, mapka);
	client_cmd(id2, "record ^"%s^"", nazwa);
	client_print_color(id, print_chat, "Rozpoczeto nagrywanie %s", nazwa);
	log_to_file("addons/amxmodx/logs/pov.log", "Rozpoczeto nagrywanie %s", nazwa);
	console_print(id2, "** Brak demka = ban **");
	dane[id2][1]=get_systime(0);
	dane[id2][2]=id;
}

GetTimeAsString(seconds){
	new iMinutes=seconds/60;
	seconds%=60;

	new szResult[10];
	if(iMinutes) format(szResult, charsmax(szResult), "%dm", iMinutes);
	if(seconds) format(szResult, charsmax(szResult), "%s%ds", szResult, seconds);

	return szResult;
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1045\\ f0\\ fs16 \n\\ par }
*/
